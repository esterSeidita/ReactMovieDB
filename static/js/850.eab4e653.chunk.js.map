{"version":3,"file":"static/js/850.eab4e653.chunk.js","mappings":"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","sources":["webpack://react-movies-db/./src/components/Card/style.module.scss?f404","components/Card/index.jsx","../node_modules/@babel/runtime/helpers/esm/defineProperty.js","../node_modules/@babel/runtime/helpers/esm/objectSpread2.js","webpack://react-movies-db/./src/components/Form/style.module.scss?a17b","components/Form/index.jsx","webpack://react-movies-db/./src/pages/UpdateMovie/style.module.scss?e310","pages/UpdateMovie/index.jsx","utils/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Card\":\"style_Card__Z6Vzh\",\"mainCard\":\"style_mainCard__z21Ph\"};","import styles from \"./style.module.scss\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Card({\n  setModal,\n  movie,\n  cardID,\n  setUpdateCardId,\n  needActions\n}) {\n  const updateCard = () => {\n    setUpdateCardId(cardID);\n  };\n\n  const deleteAction = () => {\n    setModal({\n      show: \"visible\",\n      title: \"Sicuro di volere eliminare?\",\n      description: \"\",\n      needConfirm: true,\n      cardId: cardID,\n    });\n  };\n\n  return (\n    <div className={styles.Card}>\n      <img\n        src={movie.poster && movie.poster}\n        alt={movie.title && movie.title}\n      />\n      <div className={styles.mainCard}>\n        <h2>{movie.title && movie.title}</h2>\n        <p>{movie.year && movie.year}</p>\n        <p>{movie.description && movie.description}</p>\n        <ul>\n          {movie && Array.isArray(movie.genres) ? (\n            movie.genres.map((genre, index) => <li key={index}>{genre}</li>)\n          ) : (\n            <li>{movie.genres}</li>\n          )}\n        </ul>\n        {needActions && (\n          <>\n            <button onClick={deleteAction}>Delete</button>\n            <Link to={\"UpdateMovie\"}>\n              <button onClick={() => updateCard()}>Update</button>\n            </Link>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import defineProperty from \"./defineProperty.js\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}","// extracted by mini-css-extract-plugin\nexport default {\"Form\":\"style_Form__O3RLX\"};","import { NewData, UpdateData } from \"../../utils\";\nimport { useNavigate } from \"react-router-dom\";\nimport styles from \"./style.module.scss\";\n\nexport default function Form({\n  // setShowModal,\n  inputs,\n  setInputs,\n  method,\n  setAlertData\n}) {\n  const navigate = useNavigate();\n\n  const handleChange = (event) => {\n    const name = event.target.name;\n    let value = event.target.value;\n    if (name === \"genres\") value = value.split(\",\").map((el) => el.trim());\n    setInputs((values) => ({ ...values, [name]: value }));\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    if (method === \"POST\"){\n      setAlertData({content:\"Film aggiunto con successo\", response:\"CREATE\", display:true})\n\n      NewData(inputs).then(() => {\n        setTimeout(() => {\n          navigate(\"/\");\n        }, 1000);\n        setTimeout(()=>{  \n          setAlertData({content:\"\", response:\"\", display:false})\n      }, 5000);\n      }\n      );\n    }\n     \n    if(method === \"UPDATE\"){\n      setAlertData({content:\"Film aggiornato con successo\", response:\"UPDATE\", display:true})\n\n      UpdateData(inputs.id, inputs).then(() =>{   \n        navigate(\"/\")      \n        setTimeout(()=>{  \n        setAlertData({content:\"\", response:\"\", display:false})\n    }, 5000);});\n    }\n  };\n\n  return (\n    <form className={styles.Form} onSubmit={handleSubmit}>\n      <label>Titolo</label>\n      <input\n        type=\"text\"\n        name=\"title\"\n        value={inputs.title || \"\"}\n        onChange={handleChange}\n      />\n      <label>Anno</label>\n      <input\n        type=\"number\"\n        name=\"year\"\n        value={inputs.year || \"\"}\n        onChange={handleChange}\n      />\n\n      <label>Descrizione</label>\n      <input\n        type=\"text\"\n        name=\"description\"\n        value={inputs.description || \"\"}\n        onChange={handleChange}\n      />\n\n      <label>Poster</label>\n      <input\n        type=\"text\"\n        name=\"poster\"\n        value={inputs.poster || \"\"}\n        onChange={handleChange}\n      />\n\n      <label>Genere (Tag)</label>\n      <input\n        type=\"text\"\n        name=\"genres\"\n        value={inputs.genres || \"\"}\n        onChange={handleChange}\n      />\n\n      <input type=\"submit\" />\n    </form>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"UpdateMovie\":\"style_UpdateMovie__bWOK7\"};","import styles from \"./style.module.scss\";\nimport { GetData } from \"../../utils\";\nimport { useEffect, useState } from \"react\";\nimport Card from \"../../components/Card\";\nimport Form from \"../../components/Form\";\n\nexport default function UpdateMovie({ setAlertData, updateCardId }) {\n  const [inputs, setInputs] = useState({});\n  const [cardData, setCardData] = useState([]);\n  // const [showModal, setShowModal] = useState(\"not-visible\");\n  \n  useEffect(() => {\n    \n    GetData(updateCardId).then((data) => {\n      setCardData(data);\n      setInputs(data);\n    });\n// eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className={styles.UpdateMovie}>\n      <Card\n        setUpdateCardId={false}\n        key={cardData.id}\n        cardID={cardData.id}\n        movie={inputs}\n        setModal={false}\n        needActions={false}\n      />\n      <Form\n        // setShowModal={setShowModal}\n        method=\"UPDATE\"\n        inputs={inputs}\n        setInputs={setInputs}\n        setAlertData={setAlertData}\n      />\n    </div>\n  );\n}\n","export async function GetData (id=\"\") {\n    const response = await fetch(`https://edgemony-backend.herokuapp.com/movies/${id}`);\n    const data = await response.json();\n    return data;\n}\n\nexport async function DeleteData(id) {\n    return await fetch(`https://edgemony-backend.herokuapp.com/movies/${id}`, {\n        method: \"DELETE\",\n        headers: {\"Content-Type\":\"application/json\"},\n    })\n}\n\nexport async function UpdateData (id, datas) {\n    return await fetch(`https://edgemony-backend.herokuapp.com/movies/${id}`, {\n        method: \"PUT\",\n        headers: {\"Content-Type\":\"application/json\"},\n        body: JSON.stringify({\n            description: datas.description,\n            genres: datas.genres,\n            poster: datas.poster,\n            title: datas.title,\n            year: datas.year\n        })\n    })\n}\n\nexport async function NewData (datas) {\n    return await fetch(`https://edgemony-backend.herokuapp.com/movies/`, {\n        method: \"POST\",\n        headers: {\"Content-Type\":\"application/json\"},\n        body: JSON.stringify({\n            description: datas.description,\n            genres: datas.genres,\n            poster: datas.poster,\n            title: datas.title,\n            year: datas.year\n        })\n    })\n}\n\nexport const wordToUpper = (text) => {\n    const strToArr = text.trim().toLowerCase().split(\"\")\n    return strToArr[0].toUpperCase()+strToArr.slice(1).join(\"\")\n  }\n"],"names":["Card","setModal","movie","cardID","setUpdateCardId","needActions","className","styles","src","poster","alt","title","year","description","Array","isArray","genres","map","genre","index","onClick","show","needConfirm","cardId","to","_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","getOwnPropertyDescriptors","defineProperties","Form","inputs","setInputs","method","setAlertData","navigate","useNavigate","handleChange","event","name","split","el","trim","values","onSubmit","preventDefault","content","response","display","NewData","then","setTimeout","UpdateData","id","type","onChange","UpdateMovie","updateCardId","useState","cardData","setCardData","useEffect","GetData","data","fetch","json","DeleteData","headers","datas","body","JSON","stringify","wordToUpper","text","strToArr","toLowerCase","toUpperCase","slice","join"],"sourceRoot":""}