{"version":3,"file":"static/js/343.721ab6d8.chunk.js","mappings":"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","sources":["webpack://react-movies-db/./src/components/Card/style.module.scss?f404","components/Card/index.jsx","components/Modal/index.jsx","webpack://react-movies-db/./src/components/CardList/style.module.scss?9962","components/CardList/index.jsx","webpack://react-movies-db/./src/components/SearchInput/style.module.scss?bd03","components/SearchInput/index.js","../node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","components/Categories/index.js","../node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","pages/Home/index.jsx","utils/index.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Card\":\"style_Card__Z6Vzh\",\"mainCard\":\"style_mainCard__z21Ph\"};","import styles from \"./style.module.scss\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Card({\n  setModal,\n  movie,\n  cardID,\n  setUpdateCardId,\n  needActions\n}) {\n  const updateCard = () => {\n    setUpdateCardId(cardID);\n  };\n\n  const deleteAction = () => {\n    setModal({\n      show: \"visible\",\n      title: \"Sicuro di volere eliminare?\",\n      description: \"\",\n      needConfirm: true,\n      cardId: cardID,\n    });\n  };\n\n  return (\n    <div className={styles.Card}>\n      <img\n        src={movie.poster && movie.poster}\n        alt={movie.title && movie.title}\n      />\n      <div className={styles.mainCard}>\n        <h2>{movie.title && movie.title}</h2>\n        <p>{movie.year && movie.year}</p>\n        <p>{movie.description && movie.description}</p>\n        <ul>\n          {movie && Array.isArray(movie.genres) ? (\n            movie.genres.map((genre, index) => <li key={index}>{genre}</li>)\n          ) : (\n            <li>{movie.genres}</li>\n          )}\n        </ul>\n        {needActions && (\n          <>\n            <button onClick={deleteAction}>Delete</button>\n            <Link to={\"UpdateMovie\"}>\n              <button onClick={() => updateCard()}>Update</button>\n            </Link>\n          </>\n        )}\n      </div>\n    </div>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport \"./style.scss\";\n\nexport default function Modal({\n  setDeleteConfirmed,\n  showModal,\n  title,\n  description,\n  needConfirm,\n  setRender,\n}) {\n  const [visibility, setVisibility] = useState(\"not-visible\");\n\n  useEffect(() => {\n    setVisibility(showModal);\n  }, [showModal]);\n\n  return (\n    <div id={visibility} className=\"ModalWrapper\">\n      <div className=\"overlay\"></div>\n      <div className=\"modal\">\n        <h1>{title}</h1>\n        <p>{description}</p>\n        {needConfirm && (\n          <div>\n            <button\n              onClick={() => setDeleteConfirmed(true)}\n              className=\"confirm\"\n            >\n              Conferma\n            </button>\n            <button\n              onClick={() => {\n                window.location.reload(false)\n              }}\n              className=\"abort\"\n            >\n              Annulla\n            </button>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"CardList\":\"style_CardList__YGjd-\"};","import Card from \"../Card\";\nimport styles from \"./style.module.scss\";\nimport { GetData } from \"./../../utils\";\nimport { useEffect, useState } from \"react\";\n\nexport default function CardList({\n  setModalInfo,\n  categoriesFilter,\n  filter,\n  setUpdateCardId,\n  render\n}) {\n  const [movies, setMovies] = useState([]);\n  const [moviesFiltered, setMoviesFiltered] = useState([]);\n  const [modal, setModal] = useState({});\n\n  useEffect(() => {\n    GetData().then((result) => {\n      setMovies(result);\n      setMoviesFiltered(result);\n    });\n  }, [render, categoriesFilter]);\n\n  useEffect(() => {\n    setModalInfo(modal);\n  }, [modal, setModalInfo]);\n\n  useEffect(() => {\n    const filtered = movies.filter(\n      (movie) =>\n        (movie.title &&\n          movie.title.toLowerCase().includes(filter.toLowerCase())) ||\n        (movie.genres &&\n          Array.isArray(movie.genres) &&\n          movie.genres.join(\"\").toLowerCase().includes(filter.toLowerCase()))\n    );\n    setMoviesFiltered(filtered);\n // eslint-disable-next-line\n  }, [filter]);\n\n  return (\n    <div className={styles.CardList}>\n      {moviesFiltered.map((movie, index) =>\n        categoriesFilter.length === 0 ? (\n          <Card\n            setUpdateCardId={setUpdateCardId}\n            key={index}\n            cardID={movie.id}\n            movie={movie}\n            setModal={setModal}\n            needActions={true}\n          />\n        ) : (\n          movie.genres.some((genre) => categoriesFilter.includes(genre)) && (\n            <Card\n              setUpdateCardId={setUpdateCardId}\n              key={index}\n              cardID={movie.id}\n              movie={movie}\n              setModal={setModal}\n              needActions={true}\n            />\n          )\n        )\n      )}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"SearchInput\":\"style_SearchInput__bCCU4\",\"searchInput\":\"style_searchInput__NK4E3\"};","import { useState } from \"react\";\nimport styles from \"./style.module.scss\";\n\nexport default function SearchInput({ setFilter }) {\n  const [input, setInput] = useState(\"\");\n  const change = (e) => {\n    setInput(e.target.value);\n    setFilter(e.target.value);\n  };\n  return (\n    <div className={styles.SearchInput}>\n      <label htmlFor=\"filter\">Cerca:</label>\n      <input\n        className={styles.searchInput}\n        id=\"filter\"\n        placeholder=\"ex. Deadpool\"\n        type=\"text\"\n        value={input}\n        onChange={change}\n      />\n    </div>\n  );\n}\n","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import { useEffect, useState } from \"react\";\nimport { GetData, wordToUpper } from \"../../utils\";\nimport \"./style.scss\";\n\nexport default function Categories({ setCategoriesFilter }) {\n  const [categories, setCategories] = useState([]);\n  const [selectedCategories, setSelectedCategories] = useState([]);\n\n  const handleChange = (e) => {\n    const val = e.target.id;\n\n    e.target.classList.toggle(\"selected\");\n\n    if (selectedCategories.indexOf(val) === -1) {\n      setSelectedCategories((values) => [...values, val]);\n    } else {\n      const index = selectedCategories.indexOf(val);\n      selectedCategories.splice(index, 1);\n      setSelectedCategories(selectedCategories);\n    }\n  };\n\n  const getCategories = (data) => {\n    let catArray = [];\n    data.forEach((el) => {\n      if (el.genres)\n      for (const genre of el.genres) {\n        if (catArray.indexOf(genre) === -1) catArray.push(genre);\n      }\n    });\n    setCategories(catArray);\n  };\n\n  useEffect(() => {\n    GetData().then((data) => getCategories(data));\n  }, []);\n\n  useEffect(() => {\n    setCategoriesFilter(selectedCategories);\n  }, [selectedCategories, setCategoriesFilter]);\n\n  return (\n    <div className=\"Categories\">\n      <h3>Filtra per categoria:</h3>\n      {categories.map((cat, index) => (\n        <div key={index} onClick={handleChange} value={cat} id={cat}>\n          {wordToUpper(cat)}\n        </div>\n      ))}\n    </div>\n  );\n}\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nexport default function _createForOfIteratorHelper(o, allowArrayLike) {\n  var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n\n  if (!it) {\n    if (Array.isArray(o) || (it = unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = it.call(o);\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import { useEffect, useState } from \"react\";\nimport CardList from \"../../components/CardList\";\nimport SearchInput from \"../../components/SearchInput\";\n// import Checkboxes from \"../../components/Checkboxes\";\nimport Modal from \"./../../components/Modal\";\nimport { DeleteData } from \"../../utils\";\nimport Categories from \"../../components/Categories\";\n\nexport default function Home({ setDeleted, setUpdateCardId }) {\n  const [filter, setFilter] = useState(\"\");\n  const [modalInfo, setModalInfo] = useState({});\n  const [deleteConfirmed, setDeleteConfirmed] = useState(false);\n  const [categoriesFilter, setCategoriesFilter] = useState([]);\n  const [render, setRender] = useState(false);\n\n  useEffect(() => {\n    if (deleteConfirmed) {\n      DeleteData(modalInfo.cardId).then(() => {\n        setModalInfo({show: \"not-visible\"})\n        setDeleted(true);\n        setDeleteConfirmed(\"\");\n        setRender(!render);\n      });\n    }\n    // eslint-disable-next-line \n  }, [deleteConfirmed]);\n\n  return (\n    <>\n      <Modal\n        showModal={modalInfo.show || \"not-visible\"}\n        description={modalInfo.description || \"\"}\n        title={modalInfo.title || \"\"}\n        needConfirm={modalInfo.needConfirm || false}\n        setDeleteConfirmed={setDeleteConfirmed}\n        setRender = {setRender}\n      />\n      {/* <Checkboxes\n        setCategoriesFilter={setCategoriesFilter}\n        setRender={setRender}\n      /> */}\n      <Categories setCategoriesFilter={setCategoriesFilter} />\n      <SearchInput setFilter={setFilter} />\n      <CardList\n        categoriesFilter={categoriesFilter}\n        setModalInfo={setModalInfo}\n        filter={filter}\n        setUpdateCardId={setUpdateCardId}\n        render={render}\n      />\n    </>\n  );\n}\n","export async function GetData (id=\"\") {\n    const response = await fetch(`https://ester-backend.herokuapp.com/movies/${id}`);\n    const data = await response.json();\n    return data;\n}\n\nexport async function DeleteData(id) {\n    return await fetch(`https://ester-backend.herokuapp.com/movies/${id}`, {\n        method: \"DELETE\",\n        headers: {\"Content-Type\":\"application/json\"},\n    })\n}\n\nexport async function UpdateData (id, datas) {\n    return await fetch(`https://ester-backend.herokuapp.com/movies/${id}`, {\n        method: \"PUT\",\n        headers: {\"Content-Type\":\"application/json\"},\n        body: JSON.stringify({\n            description: datas.description,\n            genres: datas.genres,\n            poster: datas.poster,\n            title: datas.title,\n            year: datas.year\n        })\n    })\n}\n\nexport async function NewData (datas) {\n    return await fetch(`https://ester-backend.herokuapp.com/movies/`, {\n        method: \"POST\",\n        headers: {\"Content-Type\":\"application/json\"},\n        body: JSON.stringify({\n            description: datas.description,\n            genres: datas.genres,\n            poster: datas.poster,\n            title: datas.title,\n            year: datas.year\n        })\n    })\n}\n\nexport const wordToUpper = (text) => {\n    const strToArr = text.trim().toLowerCase().split(\"\")\n    return strToArr[0].toUpperCase()+strToArr.slice(1).join(\"\")\n  }\n"],"names":["Card","setModal","movie","cardID","setUpdateCardId","needActions","className","styles","src","poster","alt","title","year","description","Array","isArray","genres","map","genre","index","onClick","show","needConfirm","cardId","to","Modal","setDeleteConfirmed","showModal","setRender","useState","visibility","setVisibility","useEffect","id","window","location","reload","CardList","setModalInfo","categoriesFilter","filter","render","movies","setMovies","moviesFiltered","setMoviesFiltered","modal","GetData","then","result","filtered","toLowerCase","includes","join","length","some","SearchInput","setFilter","input","setInput","htmlFor","placeholder","type","value","onChange","e","target","_toConsumableArray","arr","arrayLikeToArray","iter","Symbol","iterator","from","unsupportedIterableToArray","TypeError","Categories","setCategoriesFilter","categories","setCategories","selectedCategories","setSelectedCategories","handleChange","val","classList","toggle","indexOf","values","splice","getCategories","data","catArray","forEach","el","o","allowArrayLike","it","i","F","s","n","done","_e","f","err","normalCompletion","didErr","call","step","next","_e2","push","cat","wordToUpper","Home","setDeleted","modalInfo","deleteConfirmed","DeleteData","fetch","response","json","method","headers","UpdateData","datas","body","JSON","stringify","NewData","text","strToArr","trim","split","toUpperCase","slice"],"sourceRoot":""}